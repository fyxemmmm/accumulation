version: 2.1

jobs:
  build:
    docker:
      - image: img:v2.0.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "decrypt k8s config"
          command: data=$(cat /root/.kube/oentext ); crypt aes -k=$kubekey -e=false -d=$data > /root/.kube/config
      - run:
          name: "Login Docker Repositories"
          command: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
      - run:
          name: "Build & Push Docker Image"
          command: |
            make docker-push
      - run:
          name: "Load Kubeconfig"
          command: |
            set -ex
            if [[ $CIRCLE_BRANCH == "develop" ]]
            then
              K8S_CLUSTER="stage.hub"
            elif [[ $CIRCLE_BRANCH == "master" ]]
            then
              K8S_CLUSTER="hub"
            else
              K8S_CLUSTER="dev.hub"
            fi

            kubectl config use-context $K8S_CLUSTER.k8s.ankr.network

            if [[ $K8S_CLUSTER == "dev.hub" ]]
            then
               host=api-dev.ankr.com
            elif [[ $K8S_CLUSTER == "hub" ]]
            then
               host=hub.ankr.com
            elif [[ $K8S_CLUSTER == "stage.hub" ]]
            then
               host=hub-stage.ankr.com
            fi
            echo "host: $host"
            sed -ri "s@match: Host\(\`(.*) && (.*)@match: Host(\`$host\`\) \&\& \2@" deployments/ingressroute.yaml
            kubectl apply -f deployments/ingressroute.yaml

      - run:
          name: "Deploy Job"
          command: |
            set -ex
            BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            if [[ $CIRCLE_BRANCH == 'master' || $CIRCLE_BRANCH == 'newprod' ]]; then
              REPLICA=1
              USDT_CHARGE_CRON='0 3 * * 1'
              ANKR_ERC20_CHARGE_CRON='10 3 * * 1'
              ANKR_CHARGE_CRON='20 3 * * 1'
              CARD_CHARGE_CRON='30 3 1 * *'
              CARD_RENEWAL_CRON='10 0 * * *'
              APP_DOMAIN='app.ankr.com'
            elif [[ $CIRCLE_BRANCH == 'develop' ]]; then
              REPLICA=1
              USDT_CHARGE_CRON='0 3 * * *'
              ANKR_ERC20_CHARGE_CRON='10 3 * * *'
              ANKR_CHARGE_CRON='20 3 * * *'
              CARD_CHARGE_CRON='30 3 * * 1'
              CARD_RENEWAL_CRON='10 0 * * *'
              APP_DOMAIN='app-stage.ankr.com'
            else
              REPLICA=1
              USDT_CHARGE_CRON='0 3 * * *'
              ANKR_ERC20_CHARGE_CRON='10 3 * * *'
              ANKR_CHARGE_CRON='20 3 * * *'
              CARD_CHARGE_CRON='30 3 * * 1'
              CARD_RENEWAL_CRON='10 0 * * *'
              APP_DOMAIN='app-dev.ankr.com'
            fi
            SHA1_SHORT=$(git rev-parse --short HEAD)

            if ! helm3 upgrade --wait --timeout 250s --install billmgr deployments/chart \
              --set-string image.repository=ankrnetwork/billmgr \
              --set-string image.tag=$SHA1_SHORT --set replicaCount=$REPLICA \
              --set cardRenewal.schedule="$CARD_RENEWAL_CRON" \
              --set charge.usdt.schedule="$USDT_CHARGE_CRON" --set charge.card.schedule="$CARD_CHARGE_CRON" \
              --set charge.ankrErc20.schedule="$ANKR_ERC20_CHARGE_CRON" --set charge.ankr.schedule="$ANKR_CHARGE_CRON" \
              --set appDomain="$APP_DOMAIN" ; then
              echo 'Upgrade failed, roll back to previous version'
              helm3 rollback billmgr 0
              exit 1
            fi
workflows:
  version: 2
  billmgr:
    jobs:
      - build:
          context: cicd
